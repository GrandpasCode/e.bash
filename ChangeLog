2014-09-03  Yu-Jie Lin  <livibetter@gmail.com>
[Makefile]
	* check: reduce BENCHMARK_DURATION to 0.1 seconds

[benchmark.sh]
	* remove: VARNAME
	* test: 1 + 1 on Bash Arithmetic Expansion and Evaluation, let, and
	  loadable
	* DURATION: bring back bc to calculate RUNS/second
	* TEST, EXPECT: can be set via environment variables
	* test_command: use parameters, VIA is $1, TD is $2, SETUP is $3
	* test_command: use eval to run SETUP, now $3, no longer an array,
	* test_command: TD is function name, now $2, native  function to run test

2014-09-01  Yu-Jie Lin  <livibetter@gmail.com>
[Makefile]
	* benchmark, check: benchmark is run and depended by check, with
	  DURATION = 1 second

[benchmark.sh]
	* COPYRIGHT: fix name and year
	* DURATION: can be set via environment variable, for benchmark and
	  check targets of Makefile
	* test_command: exit unsuccessfully when subprocess is not found or 0
	  runs

[e.c]
	* debug_syntax, DEBUG_SYNTAX, DPRINT: debugging message functions
	* E, F, G, H, function, main: debugging messages
	* function: type casting for rand and srand
	* main: add -d for debugging messages
	* main [loadable]: fix syntax error because of dirty pointers
	* term: remove useless const int m

2014-08-31  Yu-Jie Lin  <livibetter@gmail.com>
[Makefile]
	* benchmark: force clean
	* check: -Werror, treat warning as error for e and e.bash
	* check: force clean, so -Werror will be effective

[check.sh]
	* test: constant dblmin
	* test: constant dblmax
	* test: constant randmax
	* test: function round
	* test: function srand
	* test: function time
	* test: function trunc

[e.c]
	* function: add constant dblmin, DBL_MIX of float.h
	* function: add constant dblmax, DBL_MAX of float.h
	* function: add function round
	* function: add function srand for setting random seed, it returns
	  value of 0
	* function: add function time for Unix timestamp
	* function: add function trunc
	* function: define mathfret to return specific value, for srand

2014-08-30  Yu-Jie Lin  <livibetter@gmail.com>
[e.c]
	* main: fix implicit declaration of function time
	* print_help: use URL_ISSUES and URL_HOMEPAGE
	* print_help: fix warning comparison between signed and unsigned
	  integer expressions
	* syntax: remove unused variable t
	* term: fix warning control reaches end of non-void function by
	  explicitly returning 0, which is implicit returned value in C99

2014-08-29  Yu-Jie Lin  <livibetter@gmail.com>
[Makefile]
	* check-style: check trailing whitespace and doc8

[check.sh]
	* test version string

[e.c]
	* main: add -V for version string for command, add -h for help message

2014-08-28  Yu-Jie Lin  <livibetter@gmail.com>
[check.sh]
	* TEST_F: check test result with function
	* test randf
	* test version string

[e.c]
	* function: add constant randmax for RAND_MAX, function rand (int) and
	  function randf (double) random number

2014-08-26  Yu-Jie Lin  <livibetter@gmail.com>
[check.sh]
	* TEST: make e2718 test result skippable
	* TEST: move expect to first, enable to pass input as array
	* test spaces, 2*3 and 2 * 3
	* test syntax error message

[e.c]
	* define: SUCCESS and FAILURE
	* main, next: simplify input process by using concatenated string of
	  argv or of word list
	* syntax: change the two error message arrow style at exact
	  character 16
	* strauto: automatic memmory allocation for strcpy or re-allocation
	  for strcat

2014-08-21  Yu-Jie Lin  <livibetter@gmail.com>
[FILES]
	* add: README.rst
	* add: version.h
	* add: examples/f.sh
	* add: examples/f-examples.sh
	* rename: EXAMPLES to examples/basic.sh
	* renaem: README to README.e2718

[AUTHORS]
	* add: Yu-Jie Lin

[Makefile]
	* remove dist target
	* add install target: prefix for changing installed location
	* add install-strip target
	* add uninstall target

[e.c]
	* main: add -V option in loadable to display version string

2014-08-20  Yu-Jie Lin  <livibetter@gmail.com>
[FILES]
	* remove: e
	* add: AUTHORS
	* add: benchmark.sh
	* add: check.sh
	* add: example/sine.sh
	* add: example/sine.bc.sh
	* reanme: makefile to Makefile
	* rename: GPL to COPYING

[Makefile]
	* use implicit rule
	* set CFLAGS: -std=c99 -g -O2
	* add .PHONY
	* add all target
	* add benchmark target
	* add check target
	* add clean target
	* add e.bash target: CFLAGS uses -std=gnu99
	* add e2718 target

[benchmark.sh]
	* benchmark original e program
	* benchmark e program
	* benchmark Bash loadable with Command Substitution
	* benchmark Bash loadable with Variable Binding

[check.sh]
	* test original e, e, and loadable

[e.c]
	* change coding style
	* make Bash loadable
	* remove Vi modeline
	* add proper copyright comment
	* fix implicit declaration of function
	* use C99 boolean and isfinite
	* use EXIT_SUCCESS and EXIT_FAILURE
	* main, format: allow variable binding via -v option in Bash loadable
	* term: set GCC optimization on term function to -O0 to work around
	  input [-- -1] resulting [-nan]

